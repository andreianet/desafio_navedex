connection.connect(error => {
    if(error) throw error;
    console.log("Success connected to the database");
    var sql = `CREATE TABLE users(
        id INT AUTO_INCREMENT,
        email VARCHAR(30) NOT NULL,
        senha VARCHAR(8) NOT NULL,
        PRIMARY KEY (id)
)`;
    connection.query(sql, (err, result) => {
        if(err) throw err;
        console.log("Table created successfully!");
    })
});

 `CREATE TABLE navers(
        id INT AUTO_INCREMENT,
        name VARCHAR(30) NOT NULL,
        birthdate DATE NOT NULL,
        admission_date DATE NOT NULL,
        projects INT NOT NULL,
        PRIMARY KEY (id),
        FOREIGN KEY(projects) REFERENCES projects(id)
    )`;

`CREATE TABLE projects(
        id INT AUTO_INCREMENT,
        name VARCHAR(30) NOT NULL,
        PRIMARY KEY (id)
)`;

`CREATE TABLE users(
        id INT AUTO_INCREMENT,
        email VARCHAR(30) NOT NULL,
        senha VARCHAR(8) NOT NULL,
        PRIMARY KEY (id)
)`;

ALTER TABLE users ADD UNIQUE (email)
ALTER TABLE navedex.users MODIFY COLUMN senha VARCHAR(100); 

DELETE FROM navedex.users WHERE id = 5;

/*CONSULTAS*/
SELECT * FROM navers WHERE name = 'andreia' OR admission_date='2021-01-01' OR job_role='desenvolvedora'; 

SELECT * FROM navers WHERE job_role='qa'; 

SELECT navers.id, navers.name, navers.birthdate, navers.job_role, navers.projects AS navers, projects.id, projects.name AS project FROM navers INNER JOIN projects ON navers.id = projects.id
       